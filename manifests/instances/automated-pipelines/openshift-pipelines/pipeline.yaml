apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ds-pipeline-trigger
spec:
  params:
    - name: GIT_REPO
      type: string
    - name: GIT_REVISION
      type: string
    - name: ISSUE_NB
      type: string
  workspaces:
    - name: tekton-pvc
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: tekton-pvc
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)

    - name: start-ds-pipeline
      params:
        - name: DIGEST
          value: $(tasks.fetch-repository.results.commit)
      taskSpec:
        params:
          - name: DIGEST
            type: string
        steps:
        - image: quay.io/alegros/mnist-pipeline-exec:latest
          script: |
            echo "DIGEST: $(params.DIGEST)"
            sed -i -e 's/TEKTON_BASH_STEP_IMAGE = \(.*\)/TEKTON_BASH_STEP_IMAGE = "quay.io\/alegros\/busybox:latest"/g' /opt/app-root/lib/python3.8/site-packages/kfp_tekton/compiler/_op_to_template.py
            python /workspace/output/kfp/model.py --tag $(params.DIGEST) | grep -oP 'RUN_ID:\s\K\w+(.*)' | tr -d '\n' > "$(results.run-id.path)"
            cat $(results.run-id.path)
        results:
          - name: run-id
            type: string
      workspaces:
        - name: output
          workspace: tekton-pvc
      runAfter:
        - fetch-repository

    - name: wait-ds-pipeline
      params:
        - name: SCRIPT
          value: oc -n mnist wait --timeout=-1s --for=condition=Succeeded=true pipelinerun --selector=pipeline/runid=$(tasks.start-ds-pipeline.results.run-id)
      taskRef:
        name: openshift-client
        kind: ClusterTask
      runAfter:
        - start-ds-pipeline

    - name: mlflow-get-metrics
      taskRef:
        name: mlflow-get-metrics
        kind: ClusterTask
      params:
        - name: DIGEST
          value: $(tasks.fetch-repository.results.commit)
        - name: MLFLOW_SERVER_ENDPOINT
          value: "http://mnist-mlflow-server.mlflow:8080"
      runAfter:
        - wait-ds-pipeline

    - name: gitea-comment-pr
      params:
        - name: ISSUE_NB
          value: $(params.ISSUE_NB)
        - name: RUN_ID
          value: $(tasks.start-ds-pipeline.results.run-id)
        - name: DASHBOARD
          value: TODO
        - name: accuracy
          value: $(tasks.mlflow-get-metrics.results.accuracy)
        - name: loss
          value: $(tasks.mlflow-get-metrics.results.loss)
        - name: lr
          value: $(tasks.mlflow-get-metrics.results.lr)
        - name: val_acc
          value: $(tasks.mlflow-get-metrics.results.val_acc)
        - name: val_loss
          value: $(tasks.mlflow-get-metrics.results.val_loss)
      taskRef:
        name: gitea-comment-pr
        kind: ClusterTask
      runAfter:
        - mlflow-get-metrics