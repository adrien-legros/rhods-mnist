apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ds-pipeline-trigger
spec:
  params:
    - name: GIT_REPO
      type: string
    - name: GIT_REVISION
      type: string
    - name: ISSUE_NB
      type: string
  workspaces:
    - name: tekton-pvc
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: tekton-pvc
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)

    - name: start-ds-pipeline
      params:
        - name: DIGEST
          value: $(tasks.fetch-repository.results.commit)
      taskSpec:
        params:
          - name: DIGEST
            type: string
        steps:
        - image: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/s2i-generic-data-science-notebook:2024.1
          script: |
            echo "DIGEST: $(params.DIGEST)"
            USER_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
            echo $APP_DOMAIN
            python /workspace/output/kfp/ml-pipeline.py --tag $(params.DIGEST) --register_model --app_domain ${APP_DOMAIN} --user_token ${USER_TOKEN}| grep -oP 'RUN_ID:\s\K\w+(.*)' | tr -d '\n' > "$(results.run-id.path)"
            cat $(results.run-id.path)
          envFrom:
            - configMapRef:
                name: appdomain
        results:
          - name: run-id
            type: string
      workspaces:
        - name: output
          workspace: tekton-pvc
      runAfter:
        - fetch-repository

    - name: get-routes
      taskSpec:
        steps:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
          script: |
            oc get route rhods-dashboard -n redhat-ods-applications -ojsonpath='{.status.ingress[0].host}' > "$(results.rhoai-dashboard.path)"
            oc get route minio-console -n minio -ojsonpath='{.status.ingress[0].host}' > "$(results.minio-console.path)"
        results:
          - name: rhoai-dashboard
            type: string
          - name: minio-console
            type: string
      runAfter:
        - start-ds-pipeline

    - name: gitea-comment-pr
      params:
        - name: ISSUE_NB
          value: $(params.ISSUE_NB)
        - name: RUN_ID
          value: $(tasks.start-ds-pipeline.results.run-id)
        - name: RHOAI_DASHBOARD
          value: $(tasks.get-routes.results.rhoai-dashboard)
        - name: MINIO_CONSOLE
          value: $(tasks.get-routes.results.minio-console)
      taskRef:
        name: gitea-comment-pr
        kind: ClusterTask
      runAfter:
        - get-routes