{{- if .Values.database.migration.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mlflow-server.fullname" . }}-db-migration
  labels:
    {{- include "mlflow-server.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "mlflow-server.fullname" . }}-db-migration
    spec:
      containers:
        - name: db-migration
          command: ["./db_migration.sh"]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{ if .Values.crunchyPostgres.enabled }}
            - name: PGBOUNCE_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pguser-{{ .Release.Name }}
                  key: pgbouncer-host
            - name: PGBOUNCE_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pguser-{{ .Release.Name }}
                  key: pgbouncer-port
            - name: MLFLOW_DATABASE_HOST
              value: $(PGBOUNCE_HOST):$(PGBOUNCE_PORT)
            - name: MLFLOW_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pguser-{{ .Release.Name }}
                  key: dbname
            - name: MLFLOW_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pguser-{{ .Release.Name }}
                  key: password
            - name: MLFLOW_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pguser-{{ .Release.Name }}
                  key: user
            {{- end }}
      restartPolicy: Never
{{- end }}
