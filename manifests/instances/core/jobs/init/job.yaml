apiVersion: batch/v1
kind: Job
metadata:
  name: lab-init
  generateName: lab-init-
spec:
  parallelism: 1    
  completions: 1    
  activeDeadlineSeconds: 1800 
  backoffLimit: 6
  template:         
    metadata:
      name: lab-init
    spec:
      serviceAccountName: jobs
      restartPolicy: OnFailure
      volumes:
        - name: init-scripts
          configMap:
            name: init-scripts
            defaultMode: 0777 
      initContainers:
        - name: wait-for-minio
          image: registry.redhat.io/openshift4/ose-cli:v4.11.0-202302061916.p0.g1928ac4.assembly.stream
          command: ['/scripts/wait-for-minio.sh']
          volumeMounts:
            - name: init-scripts
              mountPath: /scripts
      containers:
        - name: minio-init
          image: quay.io/alegros/minio-client:rhods-mnist
          command: ['/scripts/init-minio.sh']
          volumeMounts:
            - name: init-scripts
              mountPath: /scripts
          env:
            - name: MINIO_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: aws-connection-s3-creds
                  key: AWS_S3_ENDPOINT
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef: 
                  name: aws-connection-s3-creds
                  key: AWS_ACCESS_KEY_ID
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef: 
                  name: aws-connection-s3-creds
                  key: AWS_SECRET_ACCESS_KEY
            - name: MNIST_DATASET
              valueFrom:
                configMapKeyRef: 
                  name: global-demo-configs
                  key: MNIST_DATASET
        - name: push-model-to-bucket
          image: quay.io/alegros/minio-client:rhods-mnist
          command: ['/scripts/push-model.sh']
          env:
            - name: NOTEBOOKS_GIT_URL
              valueFrom:
                configMapKeyRef: 
                  name: global-demo-configs
                  key: NOTEBOOKS_GIT_URL
            - name: MINIO_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: aws-connection-s3-creds
                  key: AWS_S3_ENDPOINT
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef: 
                  name: aws-connection-s3-creds
                  key: AWS_ACCESS_KEY_ID
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef: 
                  name: aws-connection-s3-creds
                  key: AWS_SECRET_ACCESS_KEY
          volumeMounts:
            - name: init-scripts
              mountPath: /scripts